{"version":3,"sources":["images/pfp.jpg","Homepage.js","reportWebVitals.js","index.js"],"names":["Navbar","id","Logo","NavLinkGroup","className","CircularImage","image","profilePicture","PersonalText","props","src","alt","NavLink","name","link","href","console","log","Homepage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAAe,G,KAAA,IAA0B,iC,MCwBzC,SAASA,IACR,OACC,sBAAKC,GAAG,SAAR,UACC,cAACC,EAAD,IACA,cAACC,EAAD,OASH,SAASD,IACR,OACC,sBAAKE,UAAU,OAAf,UACC,cAACC,EAAD,CAAeC,MAAOC,IACtB,cAACC,EAAD,OASH,SAASA,IACR,OACC,sBAAKJ,UAAU,eAAf,UACC,qBAAKA,UAAU,SAAf,0BAGA,qBAAKA,UAAU,UAAf,2CAcH,SAASC,EAAcI,GACtB,OACC,qBAAKL,UAAU,eAAf,SACC,qBAAKM,IAAKD,EAAMH,MAAOK,IAAI,GAAGP,UAAU,cAY3C,SAASD,IACR,OACC,qBAAKF,GAAG,eAAR,SACC,+BACC,6BACC,cAACW,EAAD,CAASC,KAAK,WAAWC,KAAK,+BAE/B,6BACC,cAACF,EAAD,CAASC,KAAK,OAAOC,KAAK,+BAE3B,6BACC,cAACF,EAAD,CAASC,KAAK,WAAWC,KAAK,oCAYnC,SAASF,EAAQH,GAChB,OAAO,oBAAGL,UAAU,UAAUW,KAAMN,EAAMK,KAAnC,cAA2CL,EAAMI,KAAjD,OAxGRG,QAAQC,IAAIV,GA+GGW,MAzGf,WACC,OACC,qBAAKd,UAAU,WAAf,SACC,cAACJ,EAAD,OCAYmB,EAZS,SAAAC,GACnBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,K","file":"static/js/main.464491d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pfp.a21690e3.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport profilePicture from \"./images/pfp.jpg\";\nimport \"./Homepage.css\";\n\nconsole.log(profilePicture);\n\n/**\n * Represents the homepage for my website.\n * @return {element}\n */\nfunction Homepage() {\n\treturn (\n\t\t<div className=\"Homepage\">\n\t\t\t<Navbar />\n\t\t</div>\n\t);\n}\n\n/**\n * Represents the navigation bar at the top of the screen.\n * This does not scroll with the page.\n * @return {element}\n */\nfunction Navbar() {\n\treturn (\n\t\t<div id=\"Navbar\">\n\t\t\t<Logo />\n\t\t\t<NavLinkGroup />\n\t\t</div>\n\t);\n}\n\n/**\n * Represents my name/logo in the top left of the navbar\n * @return { string } - Currently just my name. Should be a logo in the future\n */\nfunction Logo() {\n\treturn (\n\t\t<div className=\"Logo\">\n\t\t\t<CircularImage image={profilePicture} />\n\t\t\t<PersonalText />\n\t\t</div>\n\t);\n}\n\n/**\n * My name and a description below my name\n * @return { element }\n */\nfunction PersonalText() {\n\treturn (\n\t\t<div className=\"PersonalText\">\n\t\t\t<div className=\"MyName\">\n\t\t\t\tZack Sargent\n\t\t\t</div>\n\t\t\t<div className=\"AboutMe\">\n\t\t\t\tLorem ipsum dolor sit amet\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/**\n * Takes an image and returns a circularly framed image.\n * This is used to correct for rectangular images.\n * https://medium.com/@biancapower/how-to-make-a-rectangle-image-a-circle-in-css-2f392bc9abd3\n * @param {string} props - image path\n * @return {element}\n */\nfunction CircularImage(props) {\n\treturn (\n\t\t<div className=\"ImageCropper\">\n\t\t\t<img src={props.image} alt=\"\" className=\"Picture\" />\n\t\t</div>\n\t);\n}\nCircularImage.propTypes = {\n\timage: PropTypes.string.isRequired,\n};\n\n/**\n * Creates a group of links for the navigation bar\n * @return {element}\n */\nfunction NavLinkGroup() {\n\treturn (\n\t\t<div id=\"NavLinkGroup\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink name=\"Projects\" link=\"https://www.example.com/\" />\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink name=\"Blog\" link=\"https://www.example.com/\" />\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink name=\"About Me\" link=\"https://www.example.com/\" />\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\n/**\n * Creates a navigation link with a name and a link.\n * @param {object} props - name: string, link: string\n * @return {element}\n */\nfunction NavLink(props) {\n\treturn <a className=\"NavLink\" href={props.link}> {props.name} </a>;\n}\nNavLink.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tlink: PropTypes.string.isRequired\n};\n\nexport default Homepage;\n","/* eslint-disable object-curly-spacing */\n/* eslint-disable arrow-parens */\nconst reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Homepage from \"./Homepage\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Homepage />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}